{"version":3,"file":"static/js/310.43178551.chunk.js","mappings":"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","sources":["api.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'b84e9c161b0f5b3faa952c3a5a13ff25',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n    margin-top: 5px;\n    max-width: 600px;\n    display: flex;\n    jastyfy-contenr: center\n    max-width: 600px;;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n}`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    color: #3f51b550;\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  border: 0;\n  //   background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: #3f51b5;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchByQuery } from '../../api';\nimport {\n  FormDiv,\n  Form,\n  Input,\n  Button,\n  MovieList,\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    searchQuery && fetchByQuery(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const response = await fetchByQuery(query);\n    setMovies(response);\n    setSearchParams({ query });\n    setQuery('');\n  };\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <FormDiv>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={query} onChange={onChange} />\n          <Button type=\"submit\">search</Button>\n        </Form>\n      </FormDiv>\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(({ id, title, poster }) => (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Img src={poster} alt={title} />\n                <MovieTitle>\n                  <h3>{title}</h3>\n                </MovieTitle>\n              </MovieLink>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","then","_ref2","data","results","map","_ref3","id","title","poster","poster_path","catch","error","console","log","message","stop","apply","arguments","fetchByQuery","_ref4","_callee2","query","_context2","concat","_ref5","_ref6","_x","fetchMovieDetails","movieId","_ref7","_ref7$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","_ref8","cast","_ref9","name","character","profile_path","fetchMovieReviews","_ref10","_ref11","author","content","FormDiv","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Input","_templateObject3","Button","_templateObject4","MovieList","_templateObject5","MovieItem","_templateObject6","MovieLink","Link","_templateObject7","Img","_templateObject8","MovieTitle","_templateObject9","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","handleSubmit","e","response","preventDefault","sent","_jsxs","_Fragment","children","_jsx","onSubmit","type","value","onChange","target","length","to","state","from","src","alt"],"sourceRoot":""}