{"version":3,"file":"static/js/33.8e69f948.chunk.js","mappings":"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","sources":["api.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'b84e9c161b0f5b3faa952c3a5a13ff25',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  border: none;\n  background-color: transparent;\n  margin: 20px 0 0 35px;\n  padding: 0;\n  font-weight: 700;\n  cursor: pointer;\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-left: 0;\n`;\n\nexport const AddInfo = styled.h3`\n  margin-left: 35px;\n  margin-bottom: 0;\n`;\n\nexport const InfoList = styled.ul`\n  text-decoration: none;\n  margin-left: 0;\n  margin-top: 0;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  text-decoration: none;\n  font-weight: 600;\n  &.active {\n    color: #3f51b5;\n    font-weight: 700;\n    transform: scale(1.1);\n`;\n","import { useState, useEffect } from 'react';\n\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../api';\nimport {\n  Btn,\n  MovieContainer,\n  Img,\n  MovieInfo,\n  MovieTitle,\n  AddInfo,\n  InfoList,\n  InfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const { poster, title, releaseYear, userScore, overview, genres } =\n    movie ?? {};\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const backToMovies = () => {\n    navigate(backLinkHref);\n  };\n\n  return (\n    <div>\n      <Btn type=\"button\" onClick={backToMovies}>\n        Back to movies\n      </Btn>\n      {movie && (\n        <div>\n          <MovieContainer>\n            <Img src={poster} alt={title} />\n            <MovieInfo>\n              <MovieTitle>\n                {title} ({releaseYear})\n              </MovieTitle>\n              <p>User Score: {userScore}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(({ name }) => name).join(' ')}</p>\n            </MovieInfo>\n          </MovieContainer>\n\n          <AddInfo>Additional information</AddInfo>\n\n          <InfoList>\n            <li>\n              <InfoLink to={'cast'} state={{ from: location?.state?.from }}>\n                Cast\n              </InfoLink>\n            </li>\n            <li>\n              <InfoLink to={'reviews'} state={{ from: location?.state?.from }}>\n                Reviews\n              </InfoLink>\n            </li>\n          </InfoList>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","then","_ref2","data","results","map","_ref3","id","title","poster","poster_path","catch","error","console","log","message","stop","apply","arguments","fetchByQuery","_ref4","_callee2","query","_context2","concat","_ref5","_ref6","_x","fetchMovieDetails","movieId","_ref7","_ref7$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","_ref8","cast","_ref9","name","character","profile_path","fetchMovieReviews","_ref10","_ref11","author","content","Btn","styled","_templateObject","_taggedTemplateLiteral","MovieContainer","_templateObject2","Img","_templateObject3","MovieInfo","_templateObject4","MovieTitle","_templateObject5","AddInfo","_templateObject6","InfoList","_templateObject7","InfoLink","NavLink","_templateObject8","_location$state$from","_location$state","_location$state2","_location$state3","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","useEffect","_jsxs","children","_jsx","type","onClick","src","alt","join","to","Outlet"],"sourceRoot":""}